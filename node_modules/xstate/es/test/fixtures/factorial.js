import { Machine, actions } from '../../src';
var assign = actions.assign;
// @ts-ignore
var factorialMachine = /*#__PURE__*/Machine({
    initial: 'iteration',
    states: {
        iteration: {
            on: {
                ITERATE: [{
                    target: 'iteration',
                    cond: function (xs) {
                        return xs.n > 0;
                    },
                    actions: [/*#__PURE__*/assign({
                        fac: function (xs) {
                            return xs.n * xs.fac;
                        },
                        n: function (xs) {
                            return xs.n - 1;
                        }
                    })]
                }, { target: 'done' }]
            }
        },
        done: {
            onEntry: [function (xs) {
                return console.log("The answer is " + xs.fac);
            }]
        }
    }
}, {}, { n: 5, fac: 1 });
// @ts-ignore
var testMachine = /*#__PURE__*/Machine({
    initial: 'init',
    states: {
        init: {
            on: {
                ADD: [{
                    target: 'one',
                    cond: function (xs) {
                        return xs.count === 1;
                    }
                }, {
                    target: 'init',
                    cond: function (xs) {
                        return xs.count % 2 === 0;
                    },
                    actions: [/*#__PURE__*/assign({
                        count: function (xs) {
                            return xs.count / 2;
                        }
                    })]
                }, {
                    target: 'init',
                    actions: [/*#__PURE__*/assign({
                        count: function (xs) {
                            return xs.count * 3 + 1;
                        }
                    })]
                }]
            }
        },
        one: {}
    }
}, {}, { count: 11 });
//# sourceMappingURL=factorial.js.map